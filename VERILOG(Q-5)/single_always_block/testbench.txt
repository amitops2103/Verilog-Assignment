// Code your testbench here
// or browse Examples
`timescale 1ns/1ns
module tb_arbiter;
  reg clk, rstn;
  reg r1, r2, r3;
  wire a1, a2, a3;
  arbiter uut ( .clk(clk), .rstn(rstn), .r1(r1), .r2(r2), .r3(r3), .a1(a1), .a2(a2), .a3(a3));
  always #5 clk = ~clk;
  initial begin
    clk = 0;
    rstn = 0;
    r1 = 0;
    r2 = 0;
    r3 = 0;
    #10 rstn = 1;  // Release reset after 10 ns
    // Test Case 1: Request 1
    #10 r1 = 1;
    #10 r1 = 0;
    // Test Case 2: Request 2
    #10 r2 = 1;
    #10 r2 = 0;
    // Test Case 3: Request 3
    #10 r3 = 1;
    #10 r3 = 0;
    // Test Case 4: Multiple Requests (r1 and r2 simultaneously)
    #10 r1 = 1; r2 = 1;
    #10 r1 = 0; r2 = 0;
    // Test Case 5: Multiple Requests (r2 and r3 simultaneously)
    #10 r2 = 1; r3 = 1;
    #10 r2 = 0; r3 = 0;
    // Test Case 6: No Requests
    #10 r1 = 0; r2 = 0; r3 = 0;
    // Reset again
    #10 rstn = 0;
    #10 rstn = 1;
    // Test Case 7: All requests one by one
    #10 r1 = 1; #10 r1 = 0;
    #10 r2 = 1; #10 r2 = 0;
    #10 r3 = 1; #10 r3 = 0;
    // End simulation
    #20 $finish;
    end
  // Monitor the outputs
  initial begin
    $monitor("Time = %0t | r1 = %b, r2 = %b, r3 = %b | a1 = %b, a2 = %b, a3 = %b | State = %b",
             $time, r1, r2, r3, a1, a2, a3, uut.state);
    $dumpfile(" dump.vcd");
    $dumpvars(1);
  end
endmodule
